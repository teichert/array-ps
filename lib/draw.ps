/get-page-width { currentpagedevice /PageSize get 0 get } def
/get-page-height { currentpagedevice /PageSize get 1 get } def

/torxy { % row col unit-length
    3 1 roll     % unit-length row col
    2 index mul  % unit-length row rx
    3 1 roll     %  rx unit-length row
    mul neg      %  rx ry
} bind def

/toxy { % row col unit-length
    torxy get-page-height add
} bind def

/move { % start-units-from-top start-units-from-left unit-length
    toxy moveto
} bind def

/rline { % drow dcol unit-length
    torxy rlineto
} bind def

/line {  % start-units-from-top start-units-from-left height-units width-units unit-length
    5 -2 roll 2 index   % height-units width-units unit-length start-units-from-top start-units-from-left unit-length 
    move
    rline
} bind def

/linestroke {
    newpath
    line
    2 setlinewidth
    stroke
} bind def

/drawcell { % [row col] unit-length
    dup 3 1 roll % unit-length [row col] unit-length
    newpath
    * aload pop 1 move % unit-length
    [
        [0 1]
        [1 0]
        [0 -1]
    ] *
    {
        aload pop 1
        rline
    } forall
    closepath
    fill
} bind def

/column-line { % units-from-left units-high unit-length --
    0 4 1 roll % 0 units-from-left units-high unit-length
    0 exch     % 0 units-from-left units-high 0 unit-length
    linestroke
} bind def

/row-line {    % units-from-top units-wide unit-length --
    0 0 4 2 roll % units-from-top 0 0 units-wide unit-length
    linestroke
} bind def

/finish-page {
    initgraphics showpage
} bind def

/compute-cell-size { % [rows columns] (also looks at current page height and width) -- cell-size
    aload pop % rs cs
    get-page-width exch div exch  % cwidth rs
    get-page-height exch div min  %
    floor
} bind def

/rowlines { % [rows columns] cell-size
    exch
    aload pop                         % cell-size rows columns
    exch 1 add range exch 3 -1 roll { % rindexes columns cell-size
        row-line
    } 3 zipwith pop
} bind def

/columnslines { % [rows columns] cell-size
    exch
    aload pop 1 add range % cell-size rows cindexes
    exch 3 -1 roll {      % cindexes rows cell-size
        column-line
    } 3 zipwith pop
} bind def
 
/drawgrid { % [rows columns] cell-size -- 
    2 copy rowlines
    columnslines
} bind def
